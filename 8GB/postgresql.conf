# -----------------------------
# PostgreSQL configuration file 8GB
# -----------------------------
#
# This file consists of lines of the form:
#
#   name = value
#
# (The "=" is optional.)  Whitespace may be used.  Comments are introduced with
# "#" anywhere on a line.  The complete list of parameter names and allowed
# values can be found in the PostgreSQL documentation.
#
# The commented-out settings shown in this file represent the default values.
# Re-commenting a setting is NOT sufficient to revert it to the default value;
# you need to reload the server.
#
# This file is read on server startup and when the server receives a SIGHUP
# signal.  If you edit the file on a running system, you have to SIGHUP the
# server for the changes to take effect, or use "pg_ctl reload".  Some
# parameters, which are marked below, require a server shutdown and restart to
# take effect.
#
# Any parameter can also be given as a command-line option to the server, e.g.,
# "postgres -c log_connections=on".  Some parameters can be changed at run time
# with the "SET" SQL command.
#
# Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
#                MB = megabytes                     s   = seconds
#                GB = gigabytes                     min = minutes
#                                                   h   = hours
#                                                   d   = days


#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

# The default values of these variables are driven from the -D command-line
# option or PGDATA environment variable, represented here as ConfigDir.

#data_directory = 'ConfigDir'			# use data in another directory
										# (change requires restart)
#hba_file = 'ConfigDir/pg_hba.conf'		# host-based authentication file
										# (change requires restart)
#ident_file = 'ConfigDir/pg_ident.conf'	# ident configuration file
										# (change requires restart)

# If external_pid_file is not explicitly set, no extra PID file is written.
#external_pid_file = '(none)'			# write an extra PID file
										# (change requires restart)


#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# - Настройка соединений -

listen_addresses = '*'		# на каком IP адресе(ах) принимать подключения
							# defaults to 'localhost', '*' = all

port = 5432					# Номер порта, который слушает сервер в ожидании соединений.

max_connections = 80		# Увеличение значения параметра max_connections потребует приблизительно 400 байт в разделяемой памяти на подключение, плюс
							# блокировка пространства (смотрите max_locks_per_transaction). Так же вы должны увеличить параметр shared_buffers,
							# чтобы принимать больше подключений. 

#superuser_reserved_connections = 3		# Число соединений, которые зарезервированы для суперпользователя, чтобы он мог всегда зайти, разобраться в
										# чём дело, а затем принять меры. Не стоит совсем отказываться зарезервированных соединений, причём одного
										# зарезервированного соединения может оказаться не достаточно - 2 это минимум.
										
#unix_socket_directory = ''			# Определяет каталог Unix-domain socket, где сервер будет ожидать подключений от клиентских приложений. 
									# Значение по умолчанию - /tmp, но оно может быть изменено на этапе сборки.
									
#unix_socket_group = ''				# Задаёт владельца группы Unix-domain socket. (Владельцем самого сокета всегда является пользователь, который запускает сервер)
									# Вместе с параметром unix_socket_permissions он может использоваться как дополнительный механизм контроля подключений через
									# unix-domain socket. По умолчанию значение этого параметра - пустая строка, что означает группу по умолчанию для пользователя сервера.

#unix_socket_permissions = 0777		# Задаёт права доступа к unix-domain socket, которые используют обычный механизм прав доступа к файлам. В качестве параметра
									# ожидается число, которое задаёт формат доступа к файлу, используемое командами chmod и umask. (Для того, чтобы использовать 
									# восьмеричный формат ввода число должно начинаться с нуля (0)). Значение по умолчанию - 0777, что подразумевает, что любой
									# может подключиться к сокету. Логичным значением так же может быть 0770 (разрешение подключения только владельцу файла и
									# группе, см unix_socket_group) и 0700 (разрешение подключения только пользователю). (Обратите внимание, что для unix-domain socket
									# важны разрешения только на запись, так что нет никакого смысла задавать или снимать разрешения на выполнение или чтение).
									
bonjour = off						# Включает объявление о существовании сервера через Bonjour. По умолчанию - off
									
#bonjour_name = ''					# Определяет имя Bonjour сервиса. Если в качестве параметра задана пустая строка (значение по умолчанию),
									# то используется имя компьютера. Параметр игнорируется если сервер не был скомпилирован с поддержкой bonjour.

# - Безопасность и авторизация -

#authentication_timeout = 1min							# Время ожидания для прохождения авторизации в секундах. 1s-600s

#ssl = off												# Разрешается доступ через ssl.

#ssl_ciphers = 'ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH'		# allowed SSL ciphers
														# (change requires restart)
														
#ssl_renegotiation_limit = 512MB						# amount of data between renegotiations
#password_encryption = on
#db_user_namespace = off

# Kerberos and GSSAPI
#krb_server_keyfile = ''
#krb_srvname = 'postgres'		# (Kerberos only)
#krb_caseins_users = off

# - TCP Keepalives -
# see "man 7 tcp" for details

#tcp_keepalives_idle = 0		# TCP_KEEPIDLE, in seconds;
								# 0 - использовать системное значение
								
#tcp_keepalives_interval = 0	# TCP_KEEPINTVL, in seconds;
								# 0 - использовать системное значение
								
#tcp_keepalives_count = 0		# TCP_KEEPCNT;
								# 0 - использовать системное значение

#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# - Memory -

shared_buffers = 2048MB				# Размер разделяемой между процессами PostgreSQL памяти, которая нужна для выполнения активных операций. 
									# Не следует указывать слишком большой объём, так как PostgreSQL использует также дисковый кэш.
									# Средний объём данных и 256-512 МБ доступной памяти: 16-32 МБ
									# Большой объём данных и 1-4 ГБ доступной памяти: 64-256 МБ
									# 1/8 RAM или больше (но не более 1/4)
								
temp_buffers = 16MB					# Буфер под временные объекты, в основном для временных таблиц.
									# Можно установить порядка 16 МБ

max_prepared_transactions = 5		# zero disables the feature
									# Количество одновременно подготавливаемых транзакций.
									# Для работы 1С этот параметр значения не имеет, PREPARE TRANSACTION там не используются.
									# Можно оставить по дефолту - 5

work_mem = 512MB					# Специальная память, используется для сортировки и кэширования таблиц, для одного запроса.
									# При задании этого параметра следует учитывать количество конкурентных запросов, выполняемых в один момент времени.
									# При памяти 1-4Gb рекомендуется устанавливать 32-128MB
									# 1/20 RAM

maintenance_work_mem = 2048MB		# Память использующаяся для операций VACUUM, CREATE INDEX, ALTER TABLE и FOREGIN KEY.
									# Следует устанавливать большее значение, чем для work_mem. Слишком большие значения приведут к использованию свопа.
									# При памяти 1-4Gb рекомендуется устанавливать 128-512MB
									# 1/4 RAM

max_stack_depth = 2MB				# Специальный стек для сервера, в идеале он должен совпадать с размером стека, выставленном в ядре ОС.
									# Установка большего значения, чем в ядре, может привести к ошибкам.
									# Рекомендуется устанавливать 2-4MB

# - Kernel Resource Usage -

max_files_per_process = 1000		# Максимальное количество файлов, открываемых процессом и его подпроцессами в один момент времени.
									# Уменьшите данный параметр, если в процессе работы наблюдается сообщение "Too many open files".
					
#shared_preload_libraries = ''		# Если для исполнения запроса требуется загрузить какую либо разделяемую библиотеку, то действует правило: загружаем при
									# первом использовании, что замедляет исполнение самого первого такого запроса. Это можно обойти, загрузив необходимые
									# библиотеке при старте сервера, то есть воспользоваться формулой: память в обмен на скорость.

# - Оценка стоимости сборки мусора -
# Обычно нет необходимости заглядывать в этот раздел, так как сборка мусора (VACUUM) и анализ (ANALYZE) выполняются достаточно быстро.

#vacuum_cost_delay = 0ms		# 0-100 milliseconds
#vacuum_cost_page_hit = 1		# 0-10000 credits
#vacuum_cost_page_miss = 10		# 0-10000 credits
#vacuum_cost_page_dirty = 20	# 0-10000 credits
#vacuum_cost_limit = 200		# 1-10000 credits

# - Запись в фоне -

#bgwriter_delay = 200ms				# 10-10000ms between rounds
#bgwriter_lru_maxpages = 100		# 0-1000 max buffers written/round
#bgwriter_lru_multiplier = 2.0		# 0-10.0 multipler on buffers scanned/round

# - Asynchronous Behavior -

effective_io_concurrency = 4		# 1-1000. 0 disables prefetching


#------------------------------------------------------------------------------
# Журнал транзакций
#------------------------------------------------------------------------------

# - Settings -

#wal_level = minimal			# minimal, archive, or hot_standby
								# (change requires restart)
					
fsync = on				# Данный параметр отвечает за сброс данных из кэша на диск при завершении транзакций.
						# Если установить его значение fsync=off то данные не будут записываться на дисковые накопители сразу после завершения операций.
						# Это может существенно повысить скорость операций insert и update, но есть риск повредить базу,
						# если произойдет сбой (неожиданное отключение питания, сбой ОС, сбой дисковой подсистемы). 
						# Используйте эту возможность только если у вас имеются надежные ИБП и программное обеспечение,
						# завершающее работу системы при низком заряде батарей. Не следует отключать fsync при работе PostgreSQL на Windows платформе, 
						# из-за нестабильности системы

synchronous_commit = off		# Смысл параметра: Определяет, должна ли транзакция ждать,
								# пока записи WAL будут перенесены на диск, прежде чем команда
								# вернёт клиенту сообщение об успешном выполнении. По
								# умолчанию и с точки зрения безопасности этот параметр должен
								# быть включен. Если параметр выключен, возможен промежуток
								# времени между сообщением об успешном выполнении транзакции
								# и моментом, когда транзакция на самом деле защищена от сбоя
								# на сервере. В отличие от fsync, отключение этого параметра
								# не может привести к риску противоречия в базе данных: сбой
								# может привести к потере последних прошедших транзакций, но
								# состояние базы данных при этом будет таким, как будто эти
								# транзакции просто были прерваны. Таким образом, отключение
								# synchronous_commit может оказаться полезным, если
								# производительность важнее, чем точность в проведении
								# транзакций.

wal_sync_method = fdatasync		# Метод, который используется для принудительной записи данных на диск. 
								# Если fsync=off, то этот параметр не используется.
								# open_datasync - запись данных методом open() с параметром O_DSYNC
								# fdatasync - вызов метода fdatasync() после каждого commit
								# fsync_writethrough - вызывать fsync() после каждого commit игнорирую паралельные процессы
								# fsync - вызов fsync() после каждого commit
								# open_sync - запись данных методом open() с параметром O_SYNC
				

					
full_page_writes = on			# Установите данный параметр в off, если fsync=off.
								# Когда этот параметр on, PostgreSQL записывает содержимое каждой страницы в журнал транзакций во время первой модификации таблицы
								# после контрольной точки. Это необходимо потому что страницы могут записаться лишь частично если в ходе процесса ОС "упала".
								# Это приволит к тому, что на диске оказаываются новые данные смешанные со старыми.
								# Строкового уровня записи в журнал транзакций может быть не достаточно, что бы полность восстановить данные после "падения".
								# full_page_writes гарантирует корректное восстановление, ценой увелечения записываемых данных в журнал транзакций.
								# Потому что журнал транзакций все время начинается с контрольной точки.
								# Единственный способ снижения объема записи заключается в увеличении checkpoint interval.

wal_buffers = 8MB				# Количество памяти используемое в SHARED MEMORY для ведения транзакционных логов.
								# При доступной памяти 1-4GB рекомендуется устанавливать 256-1024kb
					
#wal_writer_delay = 200ms		# 1-10000 milliseconds

commit_delay = 100			# Значение commit_delay выражается в микросекундах (0 по умолчанию).
commit_siblings = 10		# Значение commit_siblings выражается в штуках (5 по умолчанию).
							# commit_delay определяют задержку между попаданием записи в буфер журнала транзакций и сбросом её на диск.
							# Если при успешном завершении транзакции активно не менее commit_siblings транзакций, то запись будет задержана на время commit_delay.
							# Если за это время завершится другая транзакция, то их изменения будут сброшены на диск вместе, при помощи одного системного вызова.
							# Эти параметры позволят ускорить работу, если параллельно выполняется много «мелких» транзакций.

# - Контрольные точки -

checkpoint_segments = 16			# Объём кэша на диске. Физический объём места на диске, требуемый под кэш вычисляется по формуле (checkpoint_segments*2+1)*16Мб.
									# Следует выделить столько, сколько не жалко, осознавая, что 32 сегмента займёт на диске свыше 1 Гб.
								
#checkpoint_timeout = 5min			# Время, через которое WAL очищается насильно. По умолчанию 300 секунд. range 30s-1h

checkpoint_completion_target = 0.9	# checkpoint target duration, 0.0 - 1.0

#checkpoint_warning = 30s			# Если кэш а диске заполняется быстрее чем число секунд checkpoint_warning, то посылается предупреждение, которое будет
									# передано в журнальный файл. Это намёк, что кэш на диске следует увеличить. 0 disables


# - Архивация -

#archive_mode = off		# разрешить архивирование
				
#archive_command = ''	# команда, используемая для архивирования сегментов
#archive_timeout = 0	# принудительно переключать сегмент в лог файле по истечению времени; 0 - выключено

#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------

# - Master Server -

# These settings are ignored on a standby server

#max_wal_senders = 0		# max number of walsender processes
							# (change requires restart)
							
#wal_sender_delay = 1s			# walsender cycle time, 1-10000 milliseconds
#wal_keep_segments = 0			# in logfile segments, 16MB each; 0 disables
#vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed
#replication_timeout = 60s		# in milliseconds; 0 disables
#synchronous_standby_names = ''	# standby servers that provide sync rep
								# comma-separated list of application_name
								# from standby(s); '*' = all

# - Standby Servers -

# These settings are ignored on a master server

#hot_standby = off			# "on" allows queries during recovery
					# (change requires restart)
#max_standby_archive_delay = 30s	# max delay before canceling queries
					# when reading WAL from archive;
					# -1 allows indefinite delay
#max_standby_streaming_delay = 30s	# max delay before canceling queries
					# when reading streaming WAL;
					# -1 allows indefinite delay
#wal_receiver_status_interval = 10s	# send replies at least this often
					# 0 disables
#hot_standby_feedback = off		# send info from standby to prevent
					# query conflicts


#------------------------------------------------------------------------------
# Планирование запросов
#------------------------------------------------------------------------------

# - Методология планировщика -

#enable_bitmapscan = on
#enable_hashagg = on
#enable_hashjoin = on
#enable_indexscan = on
#enable_material = on
#enable_mergejoin = on

enable_nestloop = on			# Определяет использование планировщика запросов. В некоторых случаях выключение планировщика может уменьшать время исполнения
								# отдельных запросов, в том числе и значительно. Однако в подавляющем большинстве случаев планировщик позволяет уменьшить время
								# выполнения запросов. Не следует его выключать, по крайней мере на постоянной основе.
								
enable_seqscan = off			# Суть такова, при отключении этого параметра постгре начинает использовать индексы, при выключении не начинает

#enable_sort = on
#enable_tidscan = on

# - Оценочные константы -

seq_page_cost = 1.0			# measured on an arbitrary scale

random_page_cost = 2.0			# Устанавливает у планировщика оценку "стоимоти" не последовательного перебора данных. По умолчанию 4.0. 
								# Уменьшение этого значения по отношению к seq_page_cost вызовет у планировщика предпочтение сканирования индекса,
								# увеличение - наоборот сделает сканирование индекса "дороже". Вы можете изменить оба значения чтобы изменить
								# отношение "стоимости" дисковых операций ввода/выдода, по отношению к "стоимости" использования процессора,
								# которая будет описана следующими параметрами. 
								# На серверах с быстрыми дисковыми массивами имеет смысл уменьшать изначальную настройку до 3.0, 2.5 или даже до 2.0.
								# Если же активная часть вашей базы данных много больше размеров оперативной памяти, попробуйте поднять значение параметра.
								# Можно подойти к выбору оптимального значения и со стороны производительности запросов.
								# Если планировщик запросов чаще, чем необходимо, предпочитает последовательные просмотры (sequential scans) просмотрам
								# с использованием индекса (index scans), понижайте значение. И наоборот, если планировщик выбирает просмотр по медленному индексу,
								# когда не должен этого делать, настройку имеет смысл увеличить. После изменения тщательно тестируйте результаты на максимально
								# широком наборе запросов. Никогда не опускайте значение random_page_cost ниже 2.0; если вам кажется, что random_page_cost
								# нужно еще понижать, разумнее в этом случае менять настройки статистики планировщика.
								# 2 для быстрых cpu, 4 для медленных

cpu_tuple_cost = 0.001			# Устанавливает у планировщика оценку "стоимоти" затрат на обработку каждой строки во время выполнения запроса. По умолчанию 0,01.
								# 0.001 для быстрых cpu, 0.01 для медленных

cpu_index_tuple_cost = 0.0005	# Устанавливает у планировщика оценку "стоимоти" затрат на обработку каждого индекса во время операции сканирования индекса.
								# По умолчанию 0,005
								# 0.0005 для быстрых cpu, 0.005 для медленных
								
cpu_operator_cost = 0.0025		# Устанавливает у планировщика оценку "стоимоти" затрат на выполнение каждого оператора или функции во время выполнения запроса.
								# По умолчанию 0.0025.

effective_cache_size = 2048MB	# Передает данные планировщику запросов об объёме памяти, которая используется ОС для кэширования файлов, для одного запроса. 
								# Для Linux: наберите команду free, необходимое значение в столбце cached (в kB) 
								# Данное значение необходимо разделить на количество конкурентных запросов в один момент 
								# времени (среднее количество подключений к базе + запас).
								# 0.9 от значения cached, которое показывает free

# - Genetic Query Optimizer -

#geqo = on
#geqo_threshold = 12
#geqo_effort = 5				# range 1-10
#geqo_pool_size = 0				# selects default based on effort
#geqo_generations = 0			# selects default based on effort
#geqo_selection_bias = 2.0		# range 1.5-2.0
#geqo_seed = 0.0				# range 0.0-1.0

# - Other Planner Options -

default_statistics_target = 100	# Устанавливает глубину статистики по таблицам. БОльшие значения могут повысить время выполнения команды ANALYZE,
								# но улучшат построение плана запроса. Рекомендуется устанавливать порядка 100.

constraint_exclusion = on	# on, off, or partition
							# Включает или отключает использование планером ограничений CONSTRAINT в таблицах при построении запросов. 
							# Рекомендуется установить значение on, при этом, если Вы изменяете CONSTRAINT у таблиц, необходимо обновить их статистику выполнив ANALYZE,
							# в противном случае будут построены неверные планы запросов.

#cursor_tuple_fraction = 0.1		# range 0.0-1.0
#from_collapse_limit = 8
join_collapse_limit = 1				# 1 disables collapsing of explicit
									# JOIN clauses


#------------------------------------------------------------------------------
# Сообщения об ошибках и событиях
#------------------------------------------------------------------------------

# - Местоположение журнального файла -

log_destination = 'syslog'					# Возможные значение: stderr, csvlog, syslog and eventlog, зависят от платформы. csvlog требует, чтобы logging_collector
											# был включен.

# This is used when logging to stderr:
#logging_collector = on						# Разрешить сбор сообщений с stderr или csvlog в лог файлы.

# Эти параметры используются только, если параметр logging_collector включен:
#log_directory = 'pg_log'					# директория - куда писать логи, может будь абсолютной или релятивной относительно PGDATA
					
#log_filename = 'postgresql-%a.log'			# шаблон имени лог файла, можно использовать последовательности strftime()
					
#log_file_mode = 0600						# creation mode for log files,
											# begin with 0 to use octal notation
					
log_truncate_on_rotation = on				# Если включено, то существующий файл будет очищен, а запись будет начата сначала файла. Файл будет очищаться только
											# по срабатыванию таймера, то есть при перезапуске сервера или при достижении определенного размера,
											# файл очищаться не будет. По умолчанию выключено, что означает дописывание в конец существующих файлов во всех случаях.
					
log_rotation_age = 1d						# Автоматическая ротация логов будет производиться по истечению заданного времени. 0 - выключено.
					
log_rotation_size = 0						# Автоматическая ротация логов будет производиться при достижении размера файла заданных размеров. 0 - выключено.

# Эти параметры имеют значение, если логи шлются в syslog:
syslog_facility = 'LOCAL0'
syslog_ident = 'postgres'

#silent_mode = off			# не используйте без syslog или logging_collector

# - Уровень информативности -

#client_min_messages = notice		# Характеризует уровень подробности сообщений отсылаемых клиенту.
									#   debug5
									#   debug4
									#   debug3
									#   debug2
									#   debug1
									#   log
									#   notice
									#   warning
									#   error

log_min_messages = warning			# Характеризует уровень подробности записей в журнальный файл.
									#   debug5
									#   debug4
									#   debug3
									#   debug2
									#   debug1
									#   info
									#   notice
									#   warning
									#   error
									#   log
									#   fatal
									#   panic

log_min_error_statement = error	# Характеризует уровень подробностей записей в журнальный файл создаваемых в результате исполнения SQL-запросов.
									#   debug5
									#   debug4
									#   debug3
									#   debug2
									#   debug1
									#   info
									#   notice
									#   warning
									#   error
									#   log
									#   fatal
									#   panic (effectively off)

#log_min_duration_statement = -1	# -1 is disabled, 0 logs all statements
					# and their durations, > 0 logs only
					# statements running at least this number
					# of milliseconds


# - Что писать в лог -

#debug_print_parse = off
#debug_print_rewritten = off
#debug_print_plan = off
#debug_pretty_print = on
#log_checkpoints = off
#log_connections = off
#log_disconnections = off
#log_duration = off
#log_error_verbosity = default		# terse, default, or verbose messages
#log_hostname = off

#log_line_prefix = ''				# специальные значения:
									#   %u = имя пользователя
									#   %d = имя БД
									#   %r = удаленный хост и порт
									#   %h = удаленный хост
									#   %p = идентификатор процесса
									#   %t = время без миллисекунд
									#   %m = время с миллисекундами
									#   %i = command tag
									#   %c = идентификатор сессии
									#   %l = session line number
									#   %s = время старта сессии
									#   %v = идентификатор виртуальной транзакции
									#   %x = идентификатор транзакции (0, если нет)
									#   %q = stop here in non-session processes
									#   %% = '%'
									# e.g. '<%u%%%d> '
					
#log_lock_waits = off			# log lock waits >= deadlock_timeout
#log_statement = 'none'			# none, ddl, mod, all
#log_temp_files = -1			# log temporary files equal or larger
					# than the specified size in kilobytes;
					# -1 disables, 0 logs all temp files
#log_timezone = '(defaults to server environment setting)'


#------------------------------------------------------------------------------
# Сбор статистики
#------------------------------------------------------------------------------

# - Query/Index Statistics Collector -

#track_activities = on
#track_counts = on
#track_functions = none					# none, pl, all
#track_activity_query_size = 1024 		# (change requires restart)

#update_process_title = on				# На FreeBSD включение этого параметра приведет к падению производительности, 
										# так что оставьте его выключенным, если вам важна производительность.

#stats_temp_directory = 'pg_stat_tmp'


# - Statistics Monitoring -

#log_parser_stats = off
#log_planner_stats = off
#log_executor_stats = off
#log_statement_stats = off


#------------------------------------------------------------------------------
# Автоматическая сборка мусора
# VACUUM - сборка "мусора". VACUUM восстанавливает место занятые "мертвыми" данными. При выполнении обычных операций с данными,
# PostgreSQL не удаляет данные физически из таблиц, это происходит с операцией VACUUM.
#------------------------------------------------------------------------------

autovacuum = off					# Включать ли автовакуум (автоматического запуска VACUUM), устанавливать on. Требует включенного параметра track_counts.

#log_autovacuum_min_duration = -1	# -1 disables, 0 logs all actions and
									# their durations, > 0 logs only
									# actions running at least this number
									# of milliseconds.
									
#autovacuum_max_workers = 3			# максимальное кол-во autovacuum процессов
					
#autovacuum_naptime = 10min			# Пауза между запусками Автовакуума. Зависит от того, как часто обновляются данные в ваших таблицах.
									# Может соствлять порядка 5min, по умолчанию 1min

#autovacuum_vacuum_threshold = 1800	# Определяет минимальное количество вставок, обновлений или удалений необходимых для посылки сигнала на запуск VACUUM
									# в любой таблице. Этот параметр может быть изменен для отдельных таблиц путем изменения параметров хранения.
									
#autovacuum_analyze_threshold = 1800	# Определяет минимальное количество вставок, обновлений или удалений необходимых для посылки сигнала на запуск ANALYZE
									# в любой таблице. Этот параметр может быть изменен для отдельных таблиц путем изменения параметров хранения.
									
#autovacuum_vacuum_scale_factor = 0.2	# Процент изменённых и удалённых записей по отношению к таблице по превышению которого запускается сборка мусора.
										# Значение по умолчанию равно 0.4.
										
#autovacuum_analyze_scale_factor = 0.1	# То же, что и предыдущая переменная, но по отношению к анализу. Значение по молчанию равно 0.2.

#autovacuum_freeze_max_age = 200000000	# maximum XID age before forced vacuum
										# (change requires restart)
										
#autovacuum_vacuum_cost_delay = 20ms		# default vacuum cost delay for
										# autovacuum, in milliseconds;
										# -1 means use vacuum_cost_delay
										
#autovacuum_vacuum_cost_limit = -1	# default vacuum cost limit for
									# autovacuum, -1 means use
									# vacuum_cost_limit


#------------------------------------------------------------------------------
# Настройки для пользователя по умолчанию
#------------------------------------------------------------------------------

# - Statement Behavior -

#search_path = '"$user",public'		# schema names
#default_tablespace = ''		# a tablespace name, '' uses the default
#temp_tablespaces = ''			# a list of tablespace names, '' uses
					# only default tablespace
#check_function_bodies = on
#default_transaction_isolation = 'read committed'
#default_transaction_read_only = off
#default_transaction_deferrable = off
#session_replication_role = 'origin'
#statement_timeout = 0			# in milliseconds, 0 is disabled
#vacuum_freeze_min_age = 50000000
#vacuum_freeze_table_age = 150000000
#bytea_output = 'hex'			# hex, escape
#xmlbinary = 'base64'
#xmloption = 'content'

# - Locale and Formatting -

datestyle = 'iso, dmy'
#intervalstyle = 'postgres'
#timezone = '(defaults to server environment setting)'
#timezone_abbreviations = 'Default'     # Select the set of available time zone
					# abbreviations.  Currently, there are
					#   Default
					#   Australia
					#   India
					# You can create your own file in
					# share/timezonesets/.
#extra_float_digits = 0			# min -15, max 3
#client_encoding = sql_ascii		# actually, defaults to database
					# encoding

# These settings are initialized by initdb, but they can be changed.
lc_messages = 'ru_RU.UTF-8'			# локаль для системных сообщений
lc_monetary = 'ru_RU.UTF-8'			# локаль для денежного формата
lc_numeric = 'ru_RU.UTF-8'			# локаль для числового формата
lc_time = 'ru_RU.UTF-8'				# локаль для формата времени

# Настройки по умолчанию для полнотекстового поиска
default_text_search_config = 'pg_catalog.russian'

# - Other Defaults -

#dynamic_library_path = '$libdir'
#local_preload_libraries = ''


#------------------------------------------------------------------------------
# Управление блокировками
#------------------------------------------------------------------------------

deadlock_timeout = 2s			# Время жизни взаимных блокировок. Установить порядка 2 секунд.

max_locks_per_transaction = 250	# Количество блокировок за одну транзакцию: установить порядка 250

# Note:  Each lock table slot uses ~270 bytes of shared memory, and there are
# max_locks_per_transaction * (max_connections + max_prepared_transactions)
# lock table slots.
#max_pred_locks_per_transaction = 64	# min 10
					# (change requires restart)

#------------------------------------------------------------------------------
# VERSION/PLATFORM COMPATIBILITY
#------------------------------------------------------------------------------

# - Previous PostgreSQL Versions -

#array_nulls = on
#backslash_quote = safe_encoding	# on, off, or safe_encoding
default_with_oids = on
escape_string_warning = off
#lo_compat_privileges = off
#quote_all_identifiers = off
#sql_inheritance = on
standard_conforming_strings = off
#synchronize_seqscans = on

# - Other Platforms and Clients -

#transform_null_equals = off


#------------------------------------------------------------------------------
# ERROR HANDLING
#------------------------------------------------------------------------------

#exit_on_error = off				# terminate session on any error?
#restart_after_crash = on			# reinitialize after backend crash?


#------------------------------------------------------------------------------
# CUSTOMIZED OPTIONS
#------------------------------------------------------------------------------

#custom_variable_classes = ''		# list of custom variable class names
